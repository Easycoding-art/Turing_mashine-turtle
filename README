Машина Тьюринга
Для работы с эмулятором машины Тьюринга необходим текст с построчной записью команд 
в формате Sa>bR& . Стоит заметить, то S - начальное состояние
машины, & - конечное состояние. Для начала работы внесите в конструктор имя файла 
с программой и массив символов(алфавит) без символа начала ленты(в его роли выступает ~)
и символа пустой ячейки(обозначается как *).
Функция print_band возвращает вид ленты в данный момент. Функция test реализует алгоритм
пользователя на сгенерированых случайным образом ячейках ленты.
Функция manual реализует алгоритм на принятом ей массиве символов.

Черепашка
В начале программы обязательно задаются цвет пера и форма исполнителя в формате
color character. Последней строкой должно быть end.
r - поворот по часовой стрелки на 15 градусов
l - поворот против часовой стрелки на 15 градусов
> - вправо
< - влево
^ - поднять перо
~ - опустить перо
w - ждать 1 секунду
set color character - смена цвета пера на color и персонажа на character
to x y - переместить персонажа на координату (x, y)
& - очистить экран
hide - скрыть персонажа
show - показать персонажа
include library - импортировать все функции из library.txt
bg color - смена цвета фона на color
# - начало однострочного комментария
// - начало многострочного комментария
\\ - конец многострочного комментария
{...}n - цикл с n итераций
F[...] - определение Функции F без аргументов(применяется как F)
G[...]x,y,z - определение Функции G с 3 аргументами(применяется как F;a,b,c)
a = 1 - задать значение переменной а как 1
now - текущие координаты в формате (x, y)
now.x - текущая координата x
b.x - получить поле x переменной b
(condition : task : another_task) - ветвление, где в левой части условие, а в правой 
действия - сначала при выполненном, а потом при невыполненном условии(пробелы между : 
обязательны, а если второго действия нет, то писать pass)
Пример: (a==1 : {>}3 : pass)
|condition : task| - цикл с условием, где в левой части условие, а в правой действие
(пробелы между : обязательны)
Заключение команды в двойные скобки позволяет использовать ее там, где нужен одиночный
символ. Например, А["a = 0"(a == 0 : "to a a")]
Можно задавать значения в виде координаты. Например, a = (0, 0). Координаты
нельзя сравнивать и совершать с ними действия.
Операторы or, and, >, <, ==, !=, +, -, * и т.д. работают.